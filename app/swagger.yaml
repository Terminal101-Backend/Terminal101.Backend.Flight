swagger: "2.0"
info:  
  version: v1.0.0
  title: "Terminal 101: Flight"
  description: Terminal 101 - Flight service
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

host: test.flight.terminal101.co
# host: localhost:8005
basePath: /

tags:
  - name: Airline
    description: Airline routes
  - name: Airport
    description: Airport routes
  - name: Book
    description: Book flight and booked flights routes
  - name: City
    description: City routes
  - name: Country
    description: Country routes
  - name: Flight
    description: Flight routes
  - name: FlightCondition
    description: Flight's conditions routes
  - name: Provider
    description: Provider routes
  - name: Restriction
    description: Country/City Restriction Conditions
  - name: Ticket
    description: Flight's tickets
  - name: Waypoint
    description: Flight origin/destination points

paths:
  # NOTE: Airport
  /country/{countryCode}/city/{cityCode}/airport:
    # NOTE: Get all airports of city of country
    get:
      tags:
        - Airport
      description: Get all airports of a city.
      parameters:
        - name: countryCode
          in: path
          type: string
          required: true
          value: DE
          description: Country standard code
        - name: cityCode
          in: path
          required: true
          type: string
          value: MUC
          description: City standard code
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Airport"

  # NOTE: City
  /country/{countryCode}/city:
    # NOTE: Get all cities of country
    get:
      tags:
        - City
      description: Get all cities of a country.
      parameters:
        - name: countryCode
          in: path
          type: string
          required: true
          value: DE
          description: Country standard code
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/City"


  # NOTE: Airline
  /airline:
    # NOTE: Get all airlines
    get:
      tags:
        - Airline
      description: Get all airlines.
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Airline"


  # NOTE: Country
  /country:
    # NOTE: Get all countries
    get:
      tags:
        - Country
      description: Get all countries.
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Country"

  # NOTE: Waypoint
  /waypoint/{waypointType}:
    # NOTE: Get waypoints for origin/destination
    get:
      tags:
        - Waypoint
      description: Get autocomplete value list.
      parameters:
        - name: waypointType
          in: path
          type: string
          enums: [ORIGIN, DESTINATION]
          required: true
          value: ORIGIN
        - name: keyword
          in: query
          type: string
          value: MUC
          description: Keyword for search.
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Waypoint"

  /waypoint/{waypointType}/popular:
    # NOTE: Get popular waypoints
    get:
      tags:
        - Waypoint
      description: Get popular waypoints.
      parameters:
        - name: waypointType
          in: path
          type: string
          enums: [ORIGIN, DESTINATION]
          required: true
          value: ORIGIN
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              type: object
              $ref: "#/definitions/WaypointCount"

  /waypoint/{waypointType}/flight-waypoint:
    # NOTE: Get waypoints for origin/destination by Amadeus API
    get:
      tags:
        - Waypoint
      description: Get waypoints for origin/destination by Amadeus API.
      parameters:
        - name: waypointType
          in: path
          type: string
          enums: [ORIGIN, DESTINATION]
          required: true
          value: ORIGIN
        - name: keyword
          in: query
          type: string
          value: FRA
          description: Keyword for search.
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              type: object
              $ref: "#/definitions/WaypointAmadeus"

  # NOTE: Flight
  /flight/search:
    # NOTE: Search a fligh
    get:
      tags:
        - Flight
      description: Search a flight
      parameters:
        - name: origin
          in: query
          type: string
          required: true
          value: MUC
          description: Flight origin code.
        - name: destination
          in: query
          type: string
          required: true
          value: IST
          description: Flight destination code.
        - name: departureDate
          in: query
          type: string
          required: true
          value: "2022-01-20"
          description: Flight departure date.
        - name: returnDate
          in: query
          type: string
          required: false
          value: "2022-02-5"
          description: Flight return date.
        - name: adults
          in: query
          type: number
          required: false
          value: 1
          description: Travelers adults count (Default equals 1).
        - name: children
          in: query
          type: number
          required: false
          description: Travelers children count (Default equals 0).
        - name: infants
          in: query
          type: number
          required: false
          description: Travelers infants count (Default equals 0).
        - name: travelClass
          in: query
          type: string
          enum: [ECONOMY, PREMIUM_ECONOMY, BUSINESS, FIRST]
          required: false
          description: Default is ECONOMY class.
        - name: segments
          in: query
          type: array
          required: false
          value:
            - DUB:NYC:2022-02-01
            - BKK:IST:2022-02-03
          items:
            type: string
          description: Keyword for search.
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Flight"

  /flight/search/{searchId}/limits:
    # NOTE: Get popular flights
    get:
      tags:
        - Flight
      parameters:
        - name: searchId
          in: path
          required: true
          type: string
      description: Get filter limits for a search.
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/FilterLimit"

  /flight/search/{searchId}:
    # NOTE: Get popular flights
    get:
      tags:
        - Flight
      parameters:
        - name: Page
          in: header
          type: number
          default: 0
        - name: PageSize
          in: header
          type: number
        - name: searchId
          in: path
          required: true
          type: string
        - name: stops
          in: query
          required: false
          type: array
          items:
            type: number
        - name: airports
          in: query
          required: false
          type: array
          items:
            type: string
        - name: airlines
          in: query
          required: false
          type: array
          items:
            type: string
        - name: priceFrom
          in: query
          required: false
          type: number
        - name: priceTo
          in: query
          required: false
          type: number
        - name: departureTimeFrom
          in: query
          required: false
          type: number
        - name: departureTimeTo
          in: query
          required: false
          type: number
        - name: arrivalTimeFrom
          in: query
          required: false
          type: number
        - name: arrivalTimeTo
          in: query
          required: false
          type: number
        - name: durationFrom
          in: query
          required: false
          type: number
        - name: durationTo
          in: query
          required: false
          type: number
      description: Get search by code and filter that.
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Flight"

  /flight/search/{searchId}/details/{flightCode}:
    # NOTE: Get popular flights
    get:
      tags:
        - Flight
      parameters:
        - name: searchId
          in: path
          required: true
          type: string
        - name: flightCode
          in: path
          required: true
          type: string
      description: Get specific flight.
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Flight"

  /flight/search/{searchId}/details/{flightCode}/price:
    # NOTE: Get popular flights
    get:
      tags:
        - Flight
      parameters:
        - name: searchId
          in: path
          required: true
          type: string
        - name: flightCode
          in: path
          required: true
          type: string
      description: Get specific flight.
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Flight"

  /flight/popular:
    # NOTE: Get popular flights
    get:
      tags:
        - Flight
      description: Get popular flights.
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/FlightPopular"

  /restriction/{countryCode}/{cityCode}:
    # NOTE: Restriction conditions
    get:
      tags:
        - Restriction
      description: Country/City restriction conditions
      parameters:
        - name: countryCode
          in: path
          required: true
          type: string
          example: US
          value: US
        - name: cityCode
          in: path
          required: false
          type: string
      responses:
        "200":
          description: OK

  /flight/book:
    # NOTE: Get all booked flights list
    get:
      tags:
        - Book
      description: Get all booked flights list
      parameters:
        - name: Authorization
          in: header
          type: string
          value: Bearer
          required: true
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/BookedFlightDetails"

    # NOTE: Book flight
    post:
      tags:
        - Book
      description: Book flight
      parameters:
        - name: Authorization
          in: header
          type: string
          value: Bearer
          required: true
        - name: Flight Info
          in: body
          required: true
          schema:
            $ref: "#/definitions/BookFlightInfo"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/BookFlightResult"

  /flight/book/{bookedFlightCode}:
    # NOTE: Get booked flight
    get:
      tags:
        - Book
      description: Get booked flight
      parameters:
        - name: Authorization
          in: header
          type: string
          value: Bearer
          required: true
        - name: bookedFlightCode
          in: path
          required: true
          type: string
          example: dg27te82ed2
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/BookFlightResult"

  /flight/book/{userCode}/{bookedFlightCode}:
    # NOTE: Get booked flight
    get:
      tags:
        - Book
      description: Get booked flight
      parameters:
        - name: Authorization
          in: header
          type: string
          value: Bearer
          required: true
        - name: userCode
          in: path
          required: true
          type: string
          example: 23rwf4rf4fr34
        - name: bookedFlightCode
          in: path
          required: true
          type: string
          example: dg27te82ed2
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/BookFlightResult"

    # NOTE: Cancel/refund booked flight
    delete:
      tags:
        - Book
      description: Cancel/refund booked flight
      parameters:
        - name: Authorization
          in: header
          type: string
          value: Bearer
          required: true
        - name: bookedFlightCode
          in: path
          required: true
          type: string
          example: dg27te82ed2
        - name: refundInfo
          in: body
          required: true
          schema:
            type: object
            $ref: "#/definitions/RefundInfo"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/BookFlightResult"

  /flight/book/{userCode}/{bookedFlightCode}:
    # NOTE: Edit user's booked flight
    patch:
      tags:
        - Book
      description: Edit user's booked flight
      parameters:
        - name: Authorization
          in: header
          type: string
          value: Bearer
          required: true
        - name: userCode
          in: path
          type: string
          value: 12345zxdhds1234
          required: true
        - name: bookedFlightCode
          in: path
          type: string
          value: dsgiqw4378rfh234iyf3
          required: true
        - name: Booked Flight Details
          in: body
          required: true
          schema:
            type: object
            $ref: "#/definitions/EditBookedFlight"
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/BookedFlightDetails"

  /flight/book/pay/{bookedFlightCode}:
    # NOTE: Generate new payment info for selected flight
    patch:
      tags:
        - Book
      description: Generate new payment info for selected flight
      parameters:
        - name: Authorization
          in: header
          type: string
          value: Bearer
          required: true
        - name: bookedFlightCode
          type: string
          required: true
          value: ge234f42g42r2
        - name: Payment Info
          in: body
          required: true
          schema:
            $ref: "#/definitions/BookFlightPaymenInfo"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/BookFlightResult"

  /flight/book/status/{bookedFlightCode}:
    # NOTE: Get booked flight's status history
    get:
      tags:
        - Book
      description: Get booked flight's status history
      parameters:
        - name: Authorization
          in: header
          type: string
          value: Bearer
          required: true
        - name: bookedFlightCode
          type: string
          required: true
          value: ge234f42g42r2
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/BookFlightStatus"

  /flight/book/status/{userCode}/{bookedFlightCode}:
    # NOTE: Get other user's booked flight's status history
    get:
      tags:
        - Book
      description: Get other user's booked flight's status history
      parameters:
        - name: Authorization
          in: header
          type: string
          value: Bearer
          required: true
        - name: bookedFlightCode
          type: string
          required: true
          value: ge234f42g42r2
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/BookFlightStatus"

  /flight/ticket/{bookedFlightCode}:
    # NOTE: Get booked flight's tickets
    get:
      tags:
        - Ticket
      description: Get booked flight's tickets
      parameters:
        - name: Authorization
          in: header
          type: string
          value: Bearer
          required: true
        - name: bookedFlightCode
          in: path
          type: string
          required: true
          value: ge234f42g42r2
      responses:
        "200":
          description: OK
          schema:
            type: file
            description: "A pdf file contains flight's tickets"

  /flight/ticket/{userCode}/{bookedFlightCode}:
    # NOTE: Get booked flight's tickets for other users by admins
    get:
      tags:
        - Ticket
      description: Get booked flight's tickets for other users by admins
      parameters:
        - name: Authorization
          in: header
          type: string
          value: Bearer
          required: true
        - name: bookedFlightCode
          in: path
          type: string
          required: true
          value: ge234f42g42r2
        - name: userCode
          in: path
          type: string
          required: true
          value: 342ryhf3hui34rf
      responses:
        "200":
          description: OK
          schema:
            type: file
            description: "A pdf file contains flight's tickets"

  /flight/ticket/view/{token}/{bookedFlightCode}:
    # NOTE: View booked flight's tickets
    get:
      tags:
        - Ticket
      description: View booked flight's tickets
      parameters:
        - name: token
          in: path
          type: string
          required: true
          value: Bearer
        - name: bookedFlightCode
          in: path
          type: string
          required: true
          value: ge234f42g42r2
      responses:
        "200":
          description: OK
          schema:
            type: file
            description: "A pdf file contains flight's tickets"

  /provider:
    get:
      tags:
        - Provider
      description: Get all providers
      responses:
        "200":
          description: OK
          schema:
            description: Provider's info
            type: array
            items:
              $ref: "#/definitions/ProviderInfo"

    post:
      tags:
        - Provider
      description: Add provider
      parameters:
        - name: Authorization
          in: header
          type: string
          value: Bearer
          required: true
        - name: providerInfo
          in: body
          required: true
          schema:
            $ref: "#/definitions/ProviderInfo"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ProviderInfo"
            description: Provider's info

  /provider/{name}:
    patch:
      tags:
        - Provider
      description: Edit provider
      parameters:
        - name: Authorization
          in: header
          type: string
          value: Bearer
          required: true
        - name: name
          in: path
          type: string
          enum: [AMADEUS, PARTO]
          value: AMADEUS
          required: true
        - name: providerInfo
          in: body
          required: true
          schema:
            $ref: "#/definitions/EditProviderInfo"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ProviderInfo"
            description: Provider's info
    delete:
      tags:
        - Provider
      description: Delete provider
      parameters:
        - name: Authorization
          in: header
          type: string
          value: Bearer
          required: true
        - name: name
          in: path
          type: string
          enum: [AMADEUS, PARTO]
          value: AMADEUS
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ProviderInfo"
            description: Provider's info


  /condition:
    # NOTE: Get all flight conditions
    get:
      tags:
        - FlightCondition
      description: Get all flight conditions
      parameters:
        - name: Authorization
          in: header
          type: string
          value: Bearer
          required: true
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/FlightConditionInfo"
              description: Flight condition info

    # NOTE: Add new flight conditions
    post:
      tags:
        - FlightCondition
      description: Add new flight conditions
      parameters:
        - name: Authorization
          in: header
          type: string
          value: Bearer
          required: true
        - name: condition
          in: body
          required: true
          schema:
            $ref: "#/definitions/FlightCondition"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/FlightConditionInfo"
            description: Flight condition info

  /condition/{code}:
    # NOTE: Get one flight condition
    get:
      tags:
        - FlightCondition
      description: Get one flight condition
      parameters:
        - name: Authorization
          in: header
          type: string
          value: Bearer
          required: true
        - name: code
          in: path
          type: number
          value: 1
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/FlightConditionInfo"
            description: Flight condition info
            
    # NOTE: Delete one flight condition
    delete:
      tags:
        - FlightCondition
      description: Delete one flight condition
      parameters:
        - name: Authorization
          in: header
          type: string
          value: Bearer
          required: true
        - name: code
          in: path
          type: number
          value: 1
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/FlightConditionInfo"
            description: Flight condition info

    # NOTE: Edit one flight condition
    patch:
      tags:
        - FlightCondition
      description: Edit one flight condition
      parameters:
        - name: Authorization
          in: header
          type: string
          value: Bearer
          required: true
        - name: code
          in: path
          type: number
          value: 1
          required: true
        - name: flightConditionInfo
          in: body
          required: true
          schema:
            $ref: "#/definitions/EditFlightCondition"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/FlightConditionInfo"
            description: Flight condition info


definitions:
  Flight:
    required:
      - origin
      - destination
      - time
    properties:
      origin:
        type: string
        example: MUC
      destination:
        type: string
        example: NYC
      time:
        type: string
        example: "2022-01-13T12:15:00.000Z"

  FilterLimit:
    properties:
      stops:
        type: array
        items:
          type: number
      aircrafts:
        type: array
        items:
          type: string
      airports:
        type: array
        items:
          $ref: "#/definitions/Waypoint"
      airlines:
        type: array
        items:
          $ref: "#/definitions/Waypoint"
      price:
        $ref: "#/definitions/NumberRange"
      departureTime:
        $ref: "#/definitions/NumberRange"
      arrivalTime:
        $ref: "#/definitions/NumberRange"
      duration:
        $ref: "#/definitions/NumberRange"

  FlightPopular:
    required:
      - origin
      - destination
      - time
      - count
    properties:
      origin:
        $ref: "#/definitions/Waypoint"
      destination:
        $ref: "#/definitions/Waypoint"
      time:
        type: string
        example: "2022-01-13T12:15:00.000Z"
      count:
        type: number
        example: 13

  WaypointCount:
    required:
      - code
      - name
      - description
      - count
    properties:
      code:
        type: string
        example: MUC
      name:
        type: string
        example: Munchen
      description:
        type: string
        example: Munchen airport
      count:
        type: number
        example: 10

  Waypoint:
    required:
      - code
      - name
      - description
    properties:
      code:
        type: string
        example: MUC
      name:
        type: string
        example: Munchen
      description:
        type: string
        example: Munchen airport
  
  WaypointAmadeus:
    required:
      - subType
      - name
      - iataCode
      - geoCode
      - address
    properties:
      subType:
        type: string
        enum: [CITY, AIRPORT]
        example: AIRPORT
      name:
        type: string
        example: FRANKFURT INTL
      iataCode:
        type: string
        example: FRANKFURT INTL
      geoCode:
        $ref: "#/definitions/GeoCode"
      address:
        $ref: "#/definitions/Address"


  Airport:
    required:
      - code
      - name
    properties:
      code:
        type: string
        example: MUC
      name:
        type: string
        example: Munchen

  City:
    required:
      - code
      - name
    properties:
      code:
        type: string
        example: MUC
      name:
        type: string
        example: Munchen

  Country:
    required:
      - code
      - name
    properties:
      code:
        type: string
        example: MUC
      name:
        type: string
        example: Munchen
      dialingCode:
        type: number
        example: 123

  NumberRange:
    properties:
      min:
        type: number
        example: 0
      max:
        type: number
        example: 1000

  BookedFlightDetails:
    properties:
      code:
        type: string
        example: fw3r879fyh24ry7yf
      bookedBy:
        type: string
        example: 231f234rfh34yhf32y
      status:
        type: string
        enum: [PAYING, INPROGRESS, REFUND, CANCEL, REMOVE, BOOKED, REJECTED]
        example: PAYING
      time:
        type: string
        example: 2022-02-05
      passengers:
        type: array
        items:
          $ref: "#/definitions/BookFlightPassenger"
      origin:
        $ref: "#/definitions/Waypoint"
      destination:
        $ref: "#/definitions/Waypoint"
      travelClass:
        type: string
        enum: [ECONOMY, PERMIUM_ECONOMY, BUSINESS, FIRST]
        example: ECONOMY
      price:
        type: number
        example: 234

  BookFlightInfo:
    required:
      - searchedFlightCode
      - flightDetailsCode
      - paymentMethodName
    properties:
      searchedFlightCode:
        type: string
        example: asdfhkadfhdksaa
      flightDetailsCode:
        type: string
        example: 2
      currencySource:
        type: string
        example: USD
      currencyTarget:
        type: string
        example: BTC
      paymentMethodName:
        type: string
        example: credit-card
      useWallet:
        type: boolean
        example: false
      contact:
        $ref: "#/definitions/ContactInfo"
      passengers:
        type: array
        items:
          $ref: "#/definitions/BookFlightPassenger"

  EditBookedFlight:
    required:
      - passengers
    properties:
      contact:
        $ref: "#/definitions/ContactInfo"
      passengers:
        type: array
        items:
          $ref: "#/definitions/BookFlightPassenger"
      status:
        type: string
        enum: [PAYING,INPROGRESS,BOOKED,CANCEL,REJECT,REFUND,REFUND_ACCEPTED,REFUND_REJECTED,REFUND_CANCEL]

  ContactInfo:
    required:
      - email
      - mobileNumber
    properties:
      email:
        type: string
        example: a@a.com
      mobileNumber:
        type: string
        example: +1987654321

  BookFlightResult:
    properties:
      code:
        type: string
        example: asdfhkadfhdksaa
      type:
        type: string
        enum: [PAY, TRANSFER_TO, TRANSFER_FROM, DEPOSIT]
        example: DEPOSIT
      value:
        type: number
        example: 100
      credit:
        type: number
        example: 1000
      time:
        type: string
        example: 2022-02-25
      description:
        type: string
        example: Pay for book flight's ticket
      externalTransactionId:
        type: string
        example: askjfh23h31i2uyuf93h4ifyh78934y3i

  BookFlightPaymenInfo:
    properties:
      currencySource:
        type: string
        example: USD
      currencyTarget:
        type: string
        example: BTC
      paymentMethodName:
        type: string
        example: credit-card
      payWay:
        type: string
        enum: [PAY, WALLET]
        example: WALLET

  BookFlightPassenger:
    required:
      - documentCode
      - documentIssuedAt
    properties:
      documentCode:
        type: string
        example: 231aweiW2
      documentIssuedAt:
        type: string
        example: DE

  ProviderInfo:
    required:
      - name
      - title
    properties:
      name:
        type: string
        enum: [AMADEUS, PARTO]
        example: AMADEUS
      title:
        type: string
        example: Amadeus
      isActive:
        type: boolean
        example: true

  EditProviderInfo:
    required:
      - title
    properties:
      title:
        type: string
        example: Amadeus
      isActive:
        type: boolean
        example: true

  Condition:
    required:
      - items
      - exclude
    properties:
      items:
        type: array
        items:
          type: string
      exclude:
        type: boolean
        example: false

  FlightCondition:
    required:
      - origin
      - destination
      - airline
      - providerNames
      - isRestricted
    properties:
      origin:
        $ref: "#/definitions/Condition"
      destination:
        $ref: "#/definitions/Condition"
      airline:
        $ref: "#/definitions/Condition"
      providerNames:
        type: array
        items:
          type: string
      isRestricted:
        type: boolean
        example: false

  FlightConditionInfo:
    properties:
      code:
        type: number
        example: 1
      origin:
        $ref: "#/definitions/Condition"
      destination:
        $ref: "#/definitions/Condition"
      airline:
        $ref: "#/definitions/Condition"
      providerNames:
        type: array
        items:
          type: string
      isActive:
        type: boolean
        example: true
      isRestricted:
        type: boolean
        example: false

  EditFlightCondition:
    properties:
      origin:
        $ref: "#/definitions/Condition"
      destination:
        $ref: "#/definitions/Condition"
      airline:
        $ref: "#/definitions/Condition"
      providerNames:
        type: array
        items:
          type: string
      isActive:
        type: boolean
        example: true
      isRestricted:
        type: boolean
        example: false

  GeoCode:
    properties:
      latitude:
        type: number
        example: 50.0406
      longitude:
        type: number
        example: 8.55603
  
  Address:
    properties:
      cityName:
        type: string
        example: FRANKFURT
      cityCode:
        type: string
        example: FRA
      countryName:
        type: string
        example: GERMANY
      countryCode:
        type: string
        example: DE
      regionCode:
        type: string
        example: EUROP

  RefundInfo:
    properties:
      description:
        type: string
      refundTo:
        type: string
        enum: [WALLET, CREDIT_CARD, CRYPTO_CURRENCY]
        example: WALLET
      refundInfo:
        type: string
        example: Credit card number

  BookFlightStatus:
    properties: 
      status:
        enum: [PAYING,INPROGRESS,BOOKED,CANCEL,REJECT,REFUND,REFUND_ACCEPTED,REFUND_REJECTED,REFUND_CANCEL]
        type: string
        example: INPROGRESS
      description:
        type: string
      time:
        type: string
        example: 2022-02-05
      changedBy:
        type: string
        description: User's code
        example: 3rfyd83y42eey823

schemes:
  # - http
  - https
consumes:
  - application/json
produces:
  - application/json
